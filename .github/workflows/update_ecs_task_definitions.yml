name: Update ECS Task Definitions

on:
  workflow_dispatch:
env:
  AWS_DEFAULT_REGION: us-east-1

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  update-ecs-task-definitions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install AWS CLI
        run: |
          echo "Installing AWS CLI..."
          sudo apt-get update
          sudo apt-get install -y awscli
          aws --version
          if [ $? -ne 0 ]; then
            echo "Error: AWS CLI installation failed"
            exit 1
          fi
          echo "AWS CLI installed successfully"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.AWS_GH_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Pull ECS Task Definitions
        run: |
          echo "Pulling ECS task definitions..."
          aws ecs list-task-definitions > task_definitions_list.json
          if [ $? -ne 0 ]; then
            echo "Error: Failed to pull ECS task definitions"
            exit 1
          fi
          echo "Successfully pulled ECS task definitions"
          cat task_definitions_list.json          
          - name: Compare, Patch, and Register New ECS Task Definitions
          run: |
            echo "Comparing and patching ECS task definitions..."
            echo "Contents of desired_task_definitions.txt:"
            cat desired_task_definitions.txt
            echo "Contents of task_definitions_list.json:"
            cat task_definitions_list.json
        
            while IFS= read -r TASK_DEF; do
              echo "Processing task definition: $TASK_DEF"
              if grep -q "$TASK_DEF" task_definitions_list.json; then
                echo "$TASK_DEF exists, pulling and patching..."
                aws ecs describe-task-definition --task-definition $TASK_DEF > current_task_definition.json
                if [ $? -ne 0 ]; then
                  echo "Error: Failed to describe task definition $TASK_DEF"
                  exit 1
                fi
                echo "Current task definition:"
                cat current_task_definition.json
                docker run -v /home/runner/work/tf-ecs-fargate-lab-v1cs/tf-ecs-fargate-lab-v1cs/current_task_definition.json:/mnt/input/current_task_definition.json \
                           -v /home/runner/work/tf-ecs-fargate-lab-v1cs/tf-ecs-fargate-lab-v1cs/patched_task_definition.json:/mnt/output/patched_task_definition.json \
                           trendmicrocloudone/ecs-taskdef-patcher:2.3.44 \
                           -i /mnt/input/current_task_definition.json \
                           -o /mnt/output/patched_task_definition.json
                if [ $? -ne 0 ]; then
                  echo "Error: Failed to patch task definition $TASK_DEF"
                  exit 1
                fi
                echo "Patched task definition:"
                cat /home/runner/work/tf-ecs-fargate-lab-v1cs/tf-ecs-fargate-lab-v1cs/patched_task_definition.json
                cp /home/runner/work/tf-ecs-fargate-lab-v1cs/tf-ecs-fargate-lab-v1cs/patched_task_definition.json path/to/terraform/configuration/$TASK_DEF.json
                if [ $? -ne 0 ]; then
                  echo "Error: Failed to copy patched task definition $TASK_DEF"
                  exit 1
                fi
        
                # Register the new task definition to create a new revision
                echo "Registering new task definition for $TASK_DEF..."
                NEW_TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://path/to/terraform/configuration/$TASK_DEF.json | jq -r '.taskDefinition.taskDefinitionArn')
                if [ $? -ne 0 ]; then
                  echo "Error: Failed to register new task definition $TASK_DEF"
                  exit 1
                fi
                echo "New task definition ARN: $NEW_TASK_DEF_ARN"
              else
                echo "$TASK_DEF does not exist, skipping..."
              fi
            done < desired_task_definitions.txt
            echo "Successfully compared, patched, and registered new ECS task definitions"